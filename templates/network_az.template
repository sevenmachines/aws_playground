Parameters:
   VpcId:
      Type: String
   SubnetCidr:
      Type: String
   AvailabilityZone:
      Type: String
   InternetGatewayId:
      Type: String

Resources:
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VpcId
      CidrBlock: !Select [0, !Cidr [ !Ref SubnetCidr, 4, 8 ]]
      AvailabilityZone: !Ref AvailabilityZone
      MapPublicIpOnLaunch: true
  PublicSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VpcId
  PublicSubnetRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGatewayId

  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicSubnetRouteTable


  # Private Subnets
  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VpcId
      CidrBlock: !Select [1, !Cidr [ !Ref SubnetCidr, 4, 8 ]]
      AvailabilityZone: !Ref AvailabilityZone
      MapPublicIpOnLaunch: false
  PrivateSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VpcId
  PrivateSubnetRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
  PrivateSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateSubnetRouteTable
  
  # Isolated Subnets
  IsolatedSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VpcId
      CidrBlock: !Select [2, !Cidr [ !Ref SubnetCidr, 4, 8 ]]
      AvailabilityZone: !Ref AvailabilityZone
      MapPublicIpOnLaunch: false
  IsolatedSubnetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VpcId
  IsolatedSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref IsolatedSubnet
      RouteTableId: !Ref IsolatedSubnetRouteTable

  IsolatedNacl:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      VpcId: !Ref VpcId

  IsolatedNetworkAclEntry:
      Type: AWS::EC2::NetworkAclEntry
      Properties:
         NetworkAclId: !Ref IsolatedNacl
         RuleNumber: 100
         Protocol: -1
         RuleAction: allow
         Egress: false
         CidrBlock: !Select [2, !Cidr [ !Ref SubnetCidr, 4, 8 ]]

  # NAT Gateway
  NatEip:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NatEip.AllocationId
      SubnetId: !Ref PublicSubnet
      
Outputs:
  PublicSubnetId:
    Value: !Ref PublicSubnet
  PrivateSubnetId:
    Value: !Ref PrivateSubnet
  IsolatedSubnetId:
    Value: !Ref IsolatedSubnet
