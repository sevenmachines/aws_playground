Parameters:
  VpcCidr:
    Type: String
  EnableBastionAccess:
    Type: String
    AllowedValues:  ['true', 'false']
    Default: 'true'
  EnablePublicBastion:
    Type: String
    Default: false
  EnableBastionFullAccessFromCidr:
    Type: String
    Default: ''
  TransitGatewayId:
    Type: String
    Default: ''
  EnableAurora:
    Type: String
    AllowedValues:  ['true', 'false']
    Default: 'false'
  AuroraDatabaseName:
    Type: String
  AuroraUsername:
    NoEcho: true
    Type: String
  EnableRedshift:
    Type: String
    AllowedValues:  ['true', 'false']
    Default: 'false'
  EnableNetworking:
    Type: String
    AllowedValues:  [true, false]
    Default: false
  RedshiftDatabaseName:
    Type: String
  RedshiftUsername:
    NoEcho: true
    Type: String

Conditions:
  CreateBastion: !Equals [!Ref EnableBastionAccess, 'true']
  CreateNetworking: !Equals [!Ref EnableNetworking, 'true']
  CreateAurora: !Equals [!Ref EnableAurora, 'true']
  CreateRedshift: !Equals [!Ref EnableRedshift, 'true']
  IsBastionPublic: !Equals [!Ref EnablePublicBastion, true]

Resources:
  Vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './vpc.template'
      Parameters:
        VPCCIDR: !Ref VpcCidr
        NumberOfAZs: 3
        AvailabilityZones: !Join
          - ','
          - - !Select [0, !GetAZs ""]
            - !Select [1, !GetAZs ""]
            - !Select [2, !GetAZs ""]
        CreatePrivateSubnets: true
        CreateAdditionalPrivateSubnets: false
        
        PublicSubnet1CIDR: !Select [0, !Cidr [!Ref VpcCidr, 12, 8]]
        PublicSubnet2CIDR: !Select [1, !Cidr [!Ref VpcCidr, 12, 8]]
        PublicSubnet3CIDR: !Select [2, !Cidr [!Ref VpcCidr, 12, 8]]
        PublicSubnet4CIDR: !Select [3, !Cidr [!Ref VpcCidr, 12, 8]]
        PrivateSubnet1ACIDR: !Select [4, !Cidr [!Ref VpcCidr, 12, 8]]
        PrivateSubnet2ACIDR: !Select [5, !Cidr [!Ref VpcCidr, 12, 8]]
        PrivateSubnet3ACIDR: !Select [6, !Cidr [!Ref VpcCidr, 12, 8]]
        PrivateSubnet4ACIDR: !Select [7, !Cidr [!Ref VpcCidr, 12, 8]]
        PrivateSubnet1BCIDR: !Select [8, !Cidr [!Ref VpcCidr, 12, 8]]
        PrivateSubnet2BCIDR: !Select [9, !Cidr [!Ref VpcCidr, 12, 8]]
        PrivateSubnet3BCIDR: !Select [10, !Cidr [!Ref VpcCidr, 12, 8]]
        PrivateSubnet4BCIDR: !Select [11, !Cidr [!Ref VpcCidr, 12, 8]]

  NetworkStack:
    Condition: CreateNetworking
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './network.template'
      Parameters:
        VpcId: !GetAtt Vpc.Outputs.VPCID
        TransitGatewayId: !Ref TransitGatewayId
        SubnetIds: !Join
          - ','
          - - !GetAtt Vpc.Outputs.PublicSubnet1ID
            - !GetAtt Vpc.Outputs.PublicSubnet2ID
            - !GetAtt Vpc.Outputs.PublicSubnet3ID
 
  PrivateBastion:
    Condition: CreateBastion
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './bastion.template'
      Parameters:
        VpcId: !GetAtt Vpc.Outputs.VPCID
        SubnetIds: !If
          - IsBastionPublic
          - !Join [',', [!GetAtt Vpc.Outputs.PublicSubnet1ID, !GetAtt Vpc.Outputs.PublicSubnet2ID, !GetAtt Vpc.Outputs.PublicSubnet3ID]]
          - !Join [',', [!GetAtt Vpc.Outputs.PrivateSubnet1AID, !GetAtt Vpc.Outputs.PrivateSubnet2AID, !GetAtt Vpc.Outputs.PrivateSubnet3AID]]
        EnablePublicAccess: !Ref EnablePublicBastion
        EnableFullAccessFromCidr: !Ref EnableBastionFullAccessFromCidr
        
  RedshiftSecrets:
    Condition: CreateRedshift
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './secret_pair.template'
      Parameters:
        Username: !Ref RedshiftUsername
        SecretName: '/databases/redshift/admin'

  RedshiftStack:
    Condition: CreateRedshift
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './redshift.template'
      Parameters:
        VpcId: !GetAtt Vpc.Outputs.VPCID
        SubnetIds: !GetAtt Vpc.Outputs.PrivateSubnetIds
        DatabaseName: !Ref RedshiftDatabaseName
        UsernameSecret: !GetAtt RedshiftSecrets.Outputs.Arn
        NumberOfNodes: 1
        PubliclyAccessible: 'false'
        RedshiftInboundCIDR: !Ref VpcCidr

  AuroraSecrets:
    Condition: CreateAurora
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './secret_pair.template'
      Parameters:
        Username: !Ref AuroraUsername
        SecretName: '/databases/aurora/admin'

  AuroraStack:
    Condition: CreateAurora
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './aurora.template'
      Parameters:
        DBName: !Ref AuroraDatabaseName
        UsernameSecret: !GetAtt AuroraSecrets.Outputs.Arn
        VpcId: !GetAtt Vpc.Outputs.VPCID
        SubnetIds: !Join
          - ','
          - - !GetAtt Vpc.Outputs.PrivateSubnet2AID
            - !GetAtt Vpc.Outputs.PrivateSubnet2BID
            - !GetAtt Vpc.Outputs.PrivateSubnet2CID
        AccessCidr: !Ref VpcCidr
        DBPort: 5432

Outputs:
  VpcId:
    Value: !Ref Vpc
  BastionAutoScalingGroup:
    Value: GetAtt PrivateBastion.Outputs.BastionAutoScalingGroup
    Description: |
      'aws autoscaling describe-auto-scaling-groups --query 'AutoScalingGroups[].Instances[].{InstanceId: InstanceId, LaunchConfigurationName: LaunchConfigurationName}'
