Parameters:
  VpcCidr:
    Type: String
  EnableBastionAccess:
    Type: String
    AllowedValues:  ['true', 'false']
    Default: 'true'
  EnableAurora:
    Type: String
    AllowedValues:  ['true', 'false']
    Default: 'false'
  AuroraDatabaseName:
    Type: String
  AuroraUsername:
    NoEcho: true
    Type: String
  EnableRedshift:
    Type: String
    AllowedValues:  ['true', 'false']
    Default: 'false'
  RedshiftDatabaseName:
    Type: String
  RedshiftUsername:
    NoEcho: true
    Type: String

Conditions:
  CreateBastion: !Equals [!Ref EnableBastionAccess, 'true']
  CreateAurora: !Equals [!Ref EnableAurora, 'true']
  CreateRedshift: !Equals [!Ref EnableRedshift, 'true']

Resources:
  Vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './vpc.template'
      Parameters:
        VpcCidr: !Ref VpcCidr

  AZ1Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './network_az.template'
      Parameters:
        VpcId: !GetAtt Vpc.Outputs.VpcId
        SubnetCidr: !Select ['0', !Cidr [!Ref VpcCidr, 4, 12]]
        AvailabilityZone: !Select [0, !GetAZs ""]
        InternetGatewayId: !GetAtt Vpc.Outputs.InternetGatewayId
  
  AZ2Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './network_az.template'
      Parameters:
        VpcId: !GetAtt Vpc.Outputs.VpcId
        SubnetCidr: !Select ['1', !Cidr [!Ref VpcCidr, 4, 12]]
        AvailabilityZone: !Select [1, !GetAZs ""]
        InternetGatewayId: !GetAtt Vpc.Outputs.InternetGatewayId
  
  PrivateBastion:
    Condition: CreatePrivateBastion
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './bastion.template'
      Parameters:
        VpcId: !GetAtt Vpc.Outputs.VpcId
        PrivateSubnet1ID: !GetAtt AZ1Stack.Outputs.PrivateSubnetId
        PrivateSubnet2ID: !GetAtt AZ2Stack.Outputs.PrivateSubnetId
        
  RedshiftSecrets:
    Condition: CreateRedshift
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './secret_pair.template'
      Parameters:
        Username: !Ref RedshiftUsername
        SecretName: '/databases/redshift/admin'

  RedshiftStack:
    Condition: CreateRedshift
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './redshift.template'
      Parameters:
        VpcId: !GetAtt Vpc.Outputs.VpcId
        SubnetIds: !Join
          - ','
          - - !GetAtt AZ1Stack.Outputs.IsolatedSubnetId
            - !GetAtt AZ1Stack.Outputs.PrivateSubnetId
            - !GetAtt AZ2Stack.Outputs.IsolatedSubnetId
            - !GetAtt AZ2Stack.Outputs.PrivateSubnetId
        DatabaseName: !Ref RedshiftDatabaseName
        UsernameSecret: !GetAtt RedshiftSecrets.Outputs.Arn
        NumberOfNodes: 1
        PubliclyAccessible: 'false'
        RedshiftInboundCIDR: !Ref VpcCidr

  AuroraSecrets:
    Condition: CreateAurora
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './secret_pair.template'
      Parameters:
        Username: !Ref AuroraUsername
        SecretName: '/databases/aurora/admin'

  AuroraStack:
    Condition: CreateAurora
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './aurora.template'
      Parameters:
        DBName: !Ref AuroraDatabaseName
        UsernameSecret: !GetAtt AuroraSecrets.Outputs.Arn
        VpcId: !GetAtt Vpc.Outputs.VpcId
        SubnetIds: !Join
          - ','
          - - !GetAtt AZ1Stack.Outputs.IsolatedSubnetId
            - !GetAtt AZ1Stack.Outputs.PrivateSubnetId
            - !GetAtt AZ2Stack.Outputs.IsolatedSubnetId
            - !GetAtt AZ2Stack.Outputs.PrivateSubnetId
        AccessCidr: !Ref VpcCidr
        DBPort: 5432
