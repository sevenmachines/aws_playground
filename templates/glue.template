AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  DatabaseName:
    Type: String
  DatabaseJDBCConnectionString:
    Type: String
  DatabaseUsernameSecret:
    Type: String
  DatabaseAvailabilityZones:
    Type: List<AWS::EC2::AvailabilityZone::Name>
  DatabaseSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
  DatabaseSecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
 
Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
  AWSGlueRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWSGlueServiceRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'glue:BatchGetCrawlers'
                  - 'glue:BatchGetJobs'
                  - 'glue:CreateCrawler'
                  - 'glue:CreateTable'
                  - 'glue:StartCrawler'
                  - 'glue:StartJobRun'
                  - 'glue:GetConnection'
                  - 'glue:GetDatabase'
                  - 'glue:GetTable'
                  - 's3:GetBucketLocation'
                  - 's3:ListBucket'
                  - 's3:ListAllMyBuckets'
                  - 's3:GetBucketAcl'
                  - 'ec2:DescribeVpcEndpoints'
                  - 'ec2:DescribeRouteTables'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DeleteNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeVpcAttribute'
                  - 'iam:ListRolePolicies'
                  - 'iam:GetRole'
                  - 'iam:GetRolePolicy'
                  - 'cloudwatch:PutMetricData'
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - 's3:CreateBucket'
                Resource:
                  - 'arn:aws:s3:::aws-glue-*'
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                Resource:
                  - 'arn:aws:s3:::aws-glue-*/*'
                  - 'arn:aws:s3:::*/*aws-glue-*/*'
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                Resource:
                  - 'arn:aws:s3:::crawler-public*'
                  - 'arn:aws:s3:::aws-glue-*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:/aws-glue/*'
              - Effect: Allow
                Action:
                  - 'ec2:CreateTags'
                  - 'ec2:DeleteTags'
                Condition:
                  'ForAllValues:StringEquals':
                    'aws:TagKeys':
                      - aws-glue-service-resource
                Resource:
                  - 'arn:aws:ec2:*:*:network-interface/*'
                  - 'arn:aws:ec2:*:*:security-group/*'
                  - 'arn:aws:ec2:*:*:instance/*'
        - PolicyName: BlogScriptsAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - 's3:ListBucket'
                  - 's3:GetObjectTagging'
                  - 's3:GetObject'
                  - 's3:GetBucketLocation'
                  - 's3:GetObjectVersion'
                  - 's3:ListJobs'
                  - 's3:HeadBucket'
                Resource:
                  - 'arn:aws:s3:::blog-scripts-glueetl/*'
                  - 'arn:aws:s3:::blog-scripts-gluetl-west2/*'
        - PolicyName: DestinationBucketPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 's3:*'
                Resource: !Join 
                  - ''
                  - - !GetAtt 
                      - S3Bucket
                      - Arn
                    - /*
  GlueCrawler:
    Type: 'AWS::Glue::Crawler'
    Properties:
      Role: !GetAtt AWSGlueRole.Arn
      DatabaseName: !Ref Database
      TablePrefix: glue_
      Targets:
        JdbcTargets:
          - ConnectionName: !Ref Connection
            Path: !Join ['/', [!Ref DatabaseName, '%']]

  Database:
    Type: AWS::Glue::Database
    Properties:
      DatabaseInput:
        Name: aurora
      CatalogId: !Ref 'AWS::AccountId'

  Connection:
    Type: AWS::Glue::Connection
    Properties:
      CatalogId: !Ref 'AWS::AccountId'
      ConnectionInput:
        Name: aurora-connection
        ConnectionType: JDBC
        ConnectionProperties:
          JDBC_CONNECTION_URL: !Ref DatabaseJDBCConnectionString
          USERNAME: !Join ['', ['{{resolve:secretsmanager:', !Ref DatabaseUsernameSecret, ':SecretString:username}}' ]]
          PASSWORD: !Join ['', ['{{resolve:secretsmanager:', !Ref DatabaseUsernameSecret, ':SecretString:password}}' ]]
        PhysicalConnectionRequirements:
          AvailabilityZone: !Select [0, !Ref DatabaseAvailabilityZones]
          SubnetId: !Select [0, !Ref DatabaseSubnetIds]
          SecurityGroupIdList: !Ref DatabaseSecurityGroupIds
      
Outputs:
  DatabaseName:
    Value: !Ref Database
