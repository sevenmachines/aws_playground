AWSTemplateFormatVersion: 2010-09-09

Parameters:
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
  VpcId:
    Description: VPC id.
    Type: AWS::EC2::VPC::Id
  AccessCidr:
    Type: String
  SourceDatabaseName:
    Type: String
    Default: ""
  SourceDatabaseEngine:
    Type: String
    Default: ""
  SourceDatabaseUsername:
    Type: String
    Default: ""
    NoEcho: true
  SourceDatabasePassword:
    Type: String
    Default: ""
    NoEcho: true
  SourceDatabasePort:
    Type: String
    Default: ""
  SourceDatabaseAddress:
    Type: String
    Default: ""
  TargetDatabaseName:
    Type: String
    Default: ""
  TargetDatabaseEngine:
    Type: String
    Default: ""
  TargetDatabaseUsername:
    Type: String
    Default: ""
    NoEcho: true
  TargetDatabasePassword:
    Type: String
    Default: ""
    NoEcho: true
  TargetDatabasePort:
    Type: String
    Default: ""
  TargetDatabaseAddress:
    Type: String
    Default: ""

Conditions:
  enableSource: !And
    - !Not [!Equals [!Ref SourceDatabaseName, ""]]
    - !Not [!Equals [!Ref SourceDatabaseEngine, ""]]
    - !Not [!Equals [!Ref SourceDatabaseUsername, ""]]
    - !Not [!Equals [!Ref SourceDatabasePassword, ""]]
    - !Not [!Equals [!Ref SourceDatabasePort, ""]]
    - !Not [!Equals [!Ref SourceDatabaseAddress, ""]]
  enableTarget: !And
    - !Not [!Equals [!Ref TargetDatabaseName, ""]]
    - !Not [!Equals [!Ref TargetDatabaseEngine, ""]]
    - !Not [!Equals [!Ref TargetDatabaseUsername, ""]]
    - !Not [!Equals [!Ref TargetDatabasePassword, ""]]
    - !Not [!Equals [!Ref TargetDatabasePort, ""]]
    - !Not [!Equals [!Ref TargetDatabaseAddress, ""]]
  enableReplication: !And
    - !Condition enableSource
    - !Condition enableTarget
Resources:
  DMSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Security group for DMS Instance
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: !Ref TargetDatabasePort
        ToPort: !Ref TargetDatabasePort
        CidrIp: !Ref AccessCidr
        Description: 'Access to Bastion Host Security Group'

  DMSReplicationSubnetGroup:
    Type: 'AWS::DMS::ReplicationSubnetGroup'
    Properties:
      ReplicationSubnetGroupDescription: Subnets available for DMS
      SubnetIds: !Ref SubnetIds
  
  DMSReplicationInstance:
    Type: "AWS::DMS::ReplicationInstance" 
    Properties:
      AllocatedStorage: 100
      PubliclyAccessible: false
      MultiAZ: false
      ReplicationInstanceClass: dms.t2.small
      VpcSecurityGroupIds: [!Ref DMSSecurityGroup]
      ReplicationSubnetGroupIdentifier: !Ref DMSReplicationSubnetGroup
      
  DMSSourceEndpoint:
    Type: "AWS::DMS::Endpoint" 
    Condition: enableSource
    Properties:
      DatabaseName: !Ref SourceDatabaseName
      EndpointType: source
      EngineName: !Ref SourceDatabaseEngine
      Username: !Ref SourceDatabaseUsername
      Password: !Ref SourceDatabasePassword
      Port: !Ref SourceDatabasePort
      ServerName: !Ref SourceDatabaseAddress

  DMSTargetEndpoint:
    Condition: enableTarget
    Type: "AWS::DMS::Endpoint" 
    Properties:
      DatabaseName: !Ref TargetDatabaseName
      EndpointType: target
      EngineName: !Ref TargetDatabaseEngine
      Username: !Ref TargetDatabaseUsername
      Password: !Ref TargetDatabasePassword
      Port: !Ref TargetDatabasePort
      ServerName: !Ref TargetDatabaseAddress
  
  DMSReplicationTask:
    Type: "AWS::DMS::ReplicationTask" 
    Condition: enableReplication
    Properties:
      MigrationType: full-load-and-cdc
      ReplicationInstanceArn: !Ref DMSReplicationInstance
      SourceEndpointArn: !Ref DMSSourceEndpoint
      TargetEndpointArn: !Ref DMSTargetEndpoint
      TableMappings: "{ \"rules\": [
                { \"rule-type\": \"selection\", \"rule-id\": \"1\", \"rule-name\": \"1\",
                \"object-locator\": { \"schema-name\": \"%\", \"table-name\": \"%\" },
                \"rule-action\": \"include\" } ] }"

Outputs:
  DMSReplicationInstanceArn:
    Value: !Ref DMSReplicationInstance
  
  
          